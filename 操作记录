1、Tools->Run manage.py Task:
   startapp news
2、编写news/models.py，创建Reporter和Article类及其字段
3、在settings.py中注册新创建的app：
   INSTALLED_APPS = [
    ...
    'news.apps.NewsConfig',
    ...
]
4、Tools->Run manage.py Task:
   makemigrations news
5、Tools->Run manage.py Task:
   migrate news
6、新建Apps目录，将新建的两个app都放进去了，将Apps make directory as sources root
7、站点管理的注册：
   配置apps/news/admin.py:
from django.contrib import admin
from .models import Reporter, Article
# Register your models here.
admin.site.register(Reporter)
admin.site.register(Article)
8、修改模块及类在站点管理上的显示：
   1、模块：
   apps/news/apps.py配置：
    class NewsConfig(AppConfig):
        name = 'apps.news'
        verbose_name = '新闻版块'
   2、类名：
   apps/news/models.py配置：
   在对应类下写内部类，Meta：
   class Meta:
       verbose_name = "报道"
       verbose_name_plural = verbose_name
   即可
9、过滤器配置,apps/news/admin.py:
   class ArticleAdmin(admin.ModelAdmin):
       fields = ['pub_date', 'headline', 'content']
       list_filter = ['pub_date']
       search_fields = ['headline']


   admin.site.register(Article, ArticleAdmin)


11、对结果排序：
     b = Book.objects.order_by('create_time')
    倒序：
     b = Book.objects.order_by('-create_time')

12、QuerySet API从入门到暂停
    --暂时没有深入研究，但牵涉到避免SQL注入攻击，有必要深入学习

13、原生SQL，用raw，示例：
    sql = "SELECT * FROM bookstore_book"
    b = Book.objects.raw(sql)
    b = Book.objects.raw(sql)[0]

14、若你使用了字符串插入或用引号包裹占位符，你正处于 SQL 注入的风险中。
    要避免SQL注入，你绝对不能在SQL字符串中用引号包裹 %s 占位符。

15、在apps/bookstore/views.py中新增了原生SQL的案例以及连接其它库的案例
    连接多个库的操作：
    1、在settings.py中添加库的设置：
    DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'django01',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': 'localhost',
        'PORT': '3306'
    },
    'mxshop': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mxshop',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': 'localhost',
        'PORT': '3306'
    }
}
注意：migrate 管理命令一次只在一个数据库上进行操作，默认情况下为default数据库，
但提供 --database 的话，它可以同步到不同数据库。
如果想同步到多个库，可以在migrate命令后制定database参数：migrate --database=mxshop
如果没有指定default数据库，在migrate的时候均需要指定--database参数

关联：
多对一：ForeignKey
多对多：ManyToManyField
一对一：OneToOneField

16、修改工具包tools下的文件：
    在transToJson.py文件中添加、优化了查询返回结果JsonResponse格式